<?xml version="1.0"?>

<st-source>
<!-- Chromium Embedded Framework (CEF) for VisualWorks.
Displays a browser inside a VW view.

See 
https://bitbucket.org/chromiumembedded/cef

Still at an very early stage. 
Windows only.

Open an examle app with:
  CEF.BrowserUI open

Based on CEF 3.3112.1659.gfef43e0 (2017-09-06)

Contact: h . kleinsorgen - at - gmail . com
Github repo: https://github.com/hkleinsorgen/VW-ChromiumEmbeddedFramework

Includes https://github.com/russmaxdesign/example-layout-one-full

Copyright (c) 2015 Russ Weakley, Max Design
https://github.com/russmaxdesign/example-layout-one-full -->


<class>
<name>VWResourceHandler</name>
<environment>CEF</environment>
<super>CEF.ResourceHandler</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>mimeType </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category></category>
<attributes>
<package>ChromiumEmbeddedFramework-BrowserUI</package>
</attributes>
</class>

<class>
<name>VWAssets</name>
<environment>CEF</environment>
<super>Core.Assets</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars></inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category></category>
<attributes>
<package>ChromiumEmbeddedFramework-BrowserUI</package>
</attributes>
</class>

<class>
<name>BrowserUI</name>
<environment>CEF</environment>
<super>UI.ApplicationModel</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>urlAspect areaPart client </inst-vars>
<class-inst-vars></class-inst-vars>
<imports>
			Graphics.*
			UI.*
			</imports>
<category></category>
<attributes>
<package>ChromiumEmbeddedFramework-BrowserUI</package>
</attributes>
</class>

<comment>
<class-id>CEF.BrowserUI</class-id>
<body>A bare bones browser app</body>
</comment>

<shared-variable>
<name>DefaultURL</name>
<environment>CEF.BrowserUI</environment>
<private>false</private>
<constant>false</constant>
<category>accessing</category>
<initializer></initializer>
<attributes>
<package>ChromiumEmbeddedFramework-BrowserUI</package>
</attributes>
</shared-variable>

<methods>
<class-id>CEF.VWResourceHandler</class-id> <category>resources</category>

<body package="ChromiumEmbeddedFramework-BrowserUI">about	&lt;resource: 'about.html'&gt;		| text |	text := '&lt;html&gt;	&lt;head&gt;		&lt;title&gt;CEF for VisualWorks&lt;/title&gt;		&lt;link rel="stylesheet" href="styles.css"/&gt;	&lt;/head&gt;	&lt;body&gt;			&lt;div class="header"&gt;			&lt;div class="container"&gt;				&lt;h1 class="header-heading"&gt;CEF for VisualWorks&lt;/h1&gt;			&lt;/div&gt;		&lt;/div&gt;		&lt;div class="content"&gt;			&lt;div class="container"&gt;				&lt;div class="main"&gt;					&lt;h2&gt;Links&lt;/h2&gt;					&lt;ul class="list-unstyled"&gt;						&lt;li&gt;							&lt;a href="https://bitbucket.org/chromiumembedded/cef"&gt;Chromium embedded framework&lt;/a&gt;						&lt;/li&gt;						&lt;li&gt;							&lt;a href="http://www.cincomsmalltalk.com"&gt;Cincom Smalltalk&lt;/a&gt;						&lt;/li&gt;					&lt;/ul&gt;					&lt;h2&gt;Info&lt;/h2&gt;					&lt;ul class="list-unstyled"&gt;						&lt;li&gt;Resource URL: &lt;code&gt;{{request}}&lt;/code&gt;						&lt;/li&gt;						&lt;li&gt;Allocated memory: &lt;code&gt;{{memory}}&lt;/code&gt;						&lt;/li&gt;						&lt;li&gt;Image: &lt;code&gt;{{image}}&lt;/code&gt;						&lt;/li&gt;					&lt;/ul&gt;				&lt;/div&gt;			&lt;/div&gt;		&lt;/div&gt;	&lt;/body&gt;&lt;/html&gt;'.	self 		resourceString: text		context: ( Dictionary new				at: 'request' put: self request method , ' ' , self request url;				at: 'memory' put: Kernel.ObjectMemory dynamicallyAllocatedFootprint printString;				at: 'image' put: Kernel.ObjectMemory imageName;				yourself ).</body>

<body package="ChromiumEmbeddedFramework-BrowserUI">styles	&lt;resource: 'styles.css'&gt;	self resourceString: VWAssets styles.</body>
</methods>

<methods>
<class-id>CEF.VWResourceHandler class</class-id> <category>accessing</category>

<body package="ChromiumEmbeddedFramework-BrowserUI">resourcePragma	&lt;pragmas: #instance&gt;	^ #(resource:)</body>
</methods>

<methods>
<class-id>CEF.VWAssets class</class-id> <category>css imports</category>

<body package="ChromiumEmbeddedFramework-BrowserUI">styles	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'styles.css'&gt;	&lt;md5sum: #[94 241 24 112 166 193 18 188 37 124 157 7 144 254 195 3]&gt;	^[self fromGZipCompressedString: 'G8,H@@@@@@@@@H5VR7O[M!@&gt;&amp;;&lt;BSR\3+X^$RD)2X&amp;&amp;&amp;$?RRG#*9=M@3RD@"1"CA *A,M^O?'',VCID!Q-.2C+W5=6M5/];V:Q=G2S?@''["%*5Y''SM+!"D=6/ "@W9A3&lt;BN8*KH&gt;,7*E$G=05&amp;AAVG&gt;6GP''@!]&gt;#W=W(M''7I\OA6%:F(R=P)JJR N(%X;%MI*%\XY&gt;/@W9R^*VHGQ]=+QC2DZABG:J!''&amp;H_)FZ7*B#26.6:"%$!760V,P%F%XY&amp;F9C,-MVF;C&lt;&amp;G2N/"M-;Q2 MD3Y\\R\K^I_")''MX5JI4+#5LUCO9@1[-''?]H^2NMLA4B-Z7ZO5P?NB(@1%M#UJ84&gt;#T_[YFZ7''Q&amp;/_J''MV&amp;;%U: F&amp;_Z3-3F*4:I?4LKVHO7- :\XZA\6&lt;N*$+3:0VV5NK''H/":[=NJJ+]!#XCNL*L%1?IR''H!BYTQ)0]]Y$A-AV_D]U6WU&gt;)POU@21H"TZF1Z 2PWR(%*M0%,WQ2H]Q$1BBDFP&gt;F\&amp;1]_,$=IXD&gt;CIZ7UF@\D1\A_I0M;#),VB-''?]0M.FRIEI*WR5WUY''Z#T_NXQ9.0HMXL(HEW4Q_TRW[PQ)T=?@P#/(E5O4F&gt;W%QQ''3GO^TV 7JD&gt;,YX*RT]=4,.EN^QAE58:*''DNM+JXT&lt;LQQ\9RT5%ZCB&lt;UN5LN#QB.B5_U=&lt;#\&gt;"4;],%G"@$"K W;R\/L%^&amp;YD%W)HY13C''QH&amp;?;"$&amp;E#;_*,\C(_I. GQ8&gt;O#_,[Z5@:3E2OR_4@O2X4+S^\V5? T9U!N^PQ!$6R&gt;&lt;59]D$B*"3'')DY\6(W&amp;3]#8HFKG74)''!3-I9(1W_&lt;^''-A$B&amp;[:943%+XJ+*SN5RK6 :2=$J\ZT_B6([#&lt;0:1V*&gt;Q?RQT[8(''%&amp;Z3&gt;C#1I;=X43JXFRF4DAH+I.+&gt;D]\G9R#16TN^S\-3B]N!^&gt;24E&gt;L2FOPVY&amp;Z&lt;=-"!V^*)]_V 3UA9+,9 0]WN&amp;&gt;]*)&gt;8&amp;W36P;;C G2 3/&gt;''D1:0:Q)J6#Z![N?[^TJYI&lt;-FVI%_5#KG(E5X5P"),%&gt;/%J8\59Z=Y895%6_:BRMD%R&lt;Y5N#,R2_3D[9YN_C[[.@VLKIT MJT5!&lt;A0?E''"Y&amp;E%U80P+%=_]KH5"5T0E:@?S2LIE4&gt;M!FWS-YBHOV)W&amp;N7J^4F^V8+,4T"G&amp;EO7%!BN7''6HB1;^5F/G2G 81#:AI''-&gt;$D2/_-J&lt;6@!&amp;?WR5XZ9?W]6W#N,[2$ -%Y[]GJPUQE,M&gt;G8(=L_26).3MYK..:XIN0W_.-3^&amp;M]?F[%)V+=T%CBL_*, DU_PCYC+]?5B]&gt;M  ,^3XTY([[8Y (D;\!LKW&gt;?N&amp;*?O_K6=WM_TE$BW:09^,7@''/NN.XQOS%]DQW?V[7J_9H[AAW''&lt;B/$SZT&gt;8L@@@b'] once</body>
</methods>

<methods>
<class-id>CEF.BrowserUI class</class-id> <category>interface specs</category>

<body package="ChromiumEmbeddedFramework-BrowserUI">browserSpec	"Tools.UIPainter new openOnClass: self andSelector: #browserSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: '' 			#bounds: #(#{Graphics.Rectangle} 640 347 1280 693 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ArbitraryComponentSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 0 1 ) 					#name: #areaPart 					#flags: 0 					#component: #areaPart ) ) ) )</body>

<body package="ChromiumEmbeddedFramework-BrowserUI">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: '' 			#min: #(#{Core.Point} 100 100 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 460 220 1460 820 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 5 0 5 0 80 0 30 0 ) 					#name: #loadUrl 					#model: #loadUrl 					#label: 'Go' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 85 0 5 0 140 0 30 0 ) 					#name: #stopLoad 					#flags: 40 					#model: #stopLoad 					#label: 'Stop' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 145 0 5 0 170 0 30 0 ) 					#name: #goBack 					#model: #goBack 					#label: '&lt;' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 175 0 5 0 200 0 30 0 ) 					#name: #goForward 					#model: #goForward 					#label: '&gt;' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 205 0 5 0 -5 1 30 0 ) 					#name: #urlAspect 					#model: #urlAspect 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #loadUrl ) ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 35 0 0 1 0 1 ) 					#name: #browserSpec 					#flags: 0 					#minorKey: #browserSpec ) ) ) )</body>
</methods>

<methods>
<class-id>CEF.VWResourceHandler</class-id> <category>private</category>

<body package="ChromiumEmbeddedFramework-BrowserUI">mimeType	^ mimeType ifNil: [ 'text/html' ]</body>

<body package="ChromiumEmbeddedFramework-BrowserUI">mimeType: aMimeType 	mimeType := aMimeType.</body>

<body package="ChromiumEmbeddedFramework-BrowserUI">notFound	Log debugLog: 'Resource not found: ', self request url.	statusCode := 404.	self resourceString: '&lt;html&gt;&lt;body&gt;Resource not found&lt;/body&gt;&lt;/html&gt;'.</body>

<body package="ChromiumEmbeddedFramework-BrowserUI">resourceString: aString	resourceStream := ( aString asByteArrayEncoding: #utf8 ) reading.</body>

<body package="ChromiumEmbeddedFramework-BrowserUI">resourceString: aString context: mustacheContext 	| expanded |	expanded := aString.	mustacheContext 		keysAndValuesDo: [: k : v | expanded := expanded copyReplaceAll: '{{' , k , '}}' with: v ].	resourceStream := ( expanded asByteArrayEncoding: #utf8 ) reading.</body>
</methods>

<methods>
<class-id>CEF.VWResourceHandler class</class-id> <category>accessing</category>

<body package="ChromiumEmbeddedFramework-BrowserUI">schemeName	^ 'vw'</body>
</methods>

<methods>
<class-id>CEF.VWAssets class</class-id> <category>private-import-helpers</category>

<body package="ChromiumEmbeddedFramework-BrowserUI">fromGZipCompressedString: aPackedCompressedString	| compressedBytes bytes |	compressedBytes := ByteArray fromPackedString:  aPackedCompressedString.	bytes := (OS.ZLib.GZipReadStream on: compressedBytes readStream) contents.	^ bytes asStringEncoding: #utf8.</body>

<body package="ChromiumEmbeddedFramework-BrowserUI">importString: aLogicalFile 	| byteStream sourceBytes |	byteStream := ByteArray new writeStream.	sourceBytes := (aLogicalFile withEncoding: #binary) contentsOfEntireFile .	(OS.ZLib.GZipWriteStream bestCompressionOn: byteStream) nextPutAll: sourceBytes; close.	^ 'self fromGZipCompressedString: ', byteStream contents asPackedString storeString</body>

<body package="ChromiumEmbeddedFramework-BrowserUI">import_css: aFilename 	^self importString: aFilename</body>
</methods>

<methods>
<class-id>CEF.BrowserUI</class-id> <category>aspects</category>

<body package="ChromiumEmbeddedFramework-BrowserUI">areaPart	areaPart isNil 		ifTrue: [ areaPart := BrowserAreaPart new ].	^ areaPart</body>

<body package="ChromiumEmbeddedFramework-BrowserUI">urlAspect	urlAspect isNil 		ifTrue: [ urlAspect := self class defaultURL asValue ].	^ urlAspect</body>
</methods>

<methods>
<class-id>CEF.BrowserUI</class-id> <category>actions</category>

<body package="ChromiumEmbeddedFramework-BrowserUI">goBack	self browser goBack</body>

<body package="ChromiumEmbeddedFramework-BrowserUI">goForward	self browser goForward.</body>

<body package="ChromiumEmbeddedFramework-BrowserUI">stopLoad	self browser stopLoad</body>
</methods>

<methods>
<class-id>CEF.BrowserUI</class-id> <category>private</category>

<body package="ChromiumEmbeddedFramework-BrowserUI">browser	^ client browser</body>

<body package="ChromiumEmbeddedFramework-BrowserUI">registerEvents	client when: #loading do: [: frame : transitionType | self loading: frame ].	client when: #loaded do: [: frame : statusCode | self loaded: frame statusCode: statusCode ].	client 		when: #loadError		do: [: frame : errorCode : errorUrl : errorText | self loadError: frame errorCode: errorCode errorUrl: errorUrl errorText: errorText ].	client when: #createdBrowser do: [ self loadUrl ].</body>

<body package="ChromiumEmbeddedFramework-BrowserUI">startBrowser	client := Client areaPart: self areaPart.	self registerEvents.	self urlColor: ColorValue darkGray.	client start.</body>

<body package="ChromiumEmbeddedFramework-BrowserUI">urlColor: aColor 	| widget lookPreferences |	widget := self wrapperAt: #urlAspect.	lookPreferences := widget lookPreferences.	lookPreferences setBackgroundColor: aColor.	widget lookPreferences: lookPreferences.	widget invalidate.</body>
</methods>

<methods>
<class-id>CEF.BrowserUI</class-id> <category>interface opening</category>

<body package="ChromiumEmbeddedFramework-BrowserUI">postBuildWith: aBuilder 	| win |	super postBuildWith: aBuilder.	( win := aBuilder window ) notNil 		ifTrue: 		[				[					[( client isNil and: [ win isOpen ]) 						ifTrue: [ self startBrowser ]				] uiEventFor: win			] forkAt: Processor activeProcess priority - 1		].</body>
</methods>

<methods>
<class-id>CEF.BrowserUI</class-id> <category>events</category>

<body package="ChromiumEmbeddedFramework-BrowserUI">loadError: frame errorCode: errorCode errorUrl: errorUrl errorText: errorText 	Log debugLog: [ 'Load error ' , errorUrl , ': ' , errorText ].	frame isMain 		ifTrue: 		[	(self widgetAt: #stopLoad) isEnabled: false.			self urlColor: ColorValue orange.			self urlAspect value: frame url		].</body>

<body package="ChromiumEmbeddedFramework-BrowserUI">loaded: frame statusCode: statusCode 	| color |	Log debugLog: [ 'Loaded ' , frame url , ', status code ' , statusCode printString ].	frame isMain 		ifTrue: 		[	(self widgetAt: #stopLoad) isEnabled: false.			color := ( statusCode = 200 or: [ statusCode = 0 ]) 					ifTrue: [ ColorValue white ]					ifFalse: [ ColorValue orange ].			self urlColor: color		].</body>

<body package="ChromiumEmbeddedFramework-BrowserUI">loading: frame 	Log debugLog: [ 'Loading ', frame url ].	frame isMain 		ifTrue: 		[	(self widgetAt: #stopLoad) isEnabled: true.			self urlColor: ColorValue lightGray.			self urlAspect value: frame url		].</body>
</methods>

<methods>
<class-id>CEF.BrowserUI class</class-id> <category>accessing</category>

<body package="ChromiumEmbeddedFramework-BrowserUI">defaultURL	^ DefaultURL ifNil: [ 'vw://cef/about.html' ]</body>

<body package="ChromiumEmbeddedFramework-BrowserUI">defaultURL: anURIOrString 	DefaultURL := anURIOrString ifNotNil: [: u | u asString ].</body>
</methods>

<do-it>"Imported Classes:"</do-it>

<do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it>

<class>
<name>ApplicationModel</name>
<environment>UI</environment>
<super>UI.Model</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>builder uiSession eventHandlers </inst-vars>
<class-inst-vars>savedWindowInformation </class-inst-vars>
<imports></imports>
<category>UIBuilder-Framework</category>
<attributes>
<package>UIBuilder-Framework</package>
</attributes>
</class>

<class>
<name>Assets</name>
<environment>Core</environment>
<super>Core.Object</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars></inst-vars>
<class-inst-vars>lastDirectory </class-inst-vars>
<imports></imports>
<category>Assets</category>
<attributes>
<package>Assets</package>
</attributes>
</class>

<class>
<name>ResourceHandler</name>
<environment>CEF</environment>
<super>CEF.Base</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>resourceStream buffer statusCode </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category></category>
<attributes>
<package>ChromiumEmbeddedFramework-UI</package>
</attributes>
</class>

</st-source>
